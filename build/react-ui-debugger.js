'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _reactDom=require('react-dom'),_reactDom2=_interopRequireDefault(_reactDom);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var setDefault=function setDefault(a){return'function'==typeof a?a:function(){}},getName=function getName(a){return a.displayName||a.name},log=function log(a,b){for(var _len=arguments.length,c=Array(2<_len?_len-2:0),_key=2;_key<_len;_key++)c[_key-2]=arguments[_key];console.log('[ReactUIDebugger] ['+getName(a)+'] '+b+' - ('+new Date().toJSON()+')',c.length?c:'')},defaults={MOUNT:'mount',UPDATE:'update'},settings={highlightStyle:{animationDuration:400,mount:{web:'3px solid rgba(205, 0, 0, 1)'},update:{web:'3px solid rgba(0, 205, 0, 1)'},default:{web:'1px solid rgba(235, 235, 235, 1)'}}},highlightChanges=function highlightChanges(a){var b=_reactDom2.default.findDOMNode(void 0);b&&(b.style.boxSizing='border-box',b.style.transition='outline 0s',window.requestAnimationFrame(function(){b.style.outline=settings.highlightStyle[a].web,window.requestAnimationFrame(function(){b.style.outline=settings.highlightStyle.default.web,b.style.transition='outline '+settings.highlightStyle.animationDuration+'ms linear'})}))};function ReactUIDebugger(a){if('undefined'!=typeof __DEV__&&!__DEV__||'undefined'!=typeof a.UIdebugActive&&!a.UIdebugActive)return a;a.prototype||(a.prototype={});var b={componentWillMount:setDefault(a.prototype.componentWillMount),componentDidMount:setDefault(a.prototype.componentDidMount),componentDidUpdate:setDefault(a.prototype.componentDidUpdate),componentWillUnmount:setDefault(a.prototype.componentWillUnmount)};a.prototype.UIdebugActive=!0;var c={mount:0,update:0},d=function d(){c.mount=0,c.update=0};return a.prototype.componentWillMount=function(){d(),b.componentWillMount.call(this)},a.prototype.componentDidMount=function(){b.componentDidMount.call(this),c.mount+=1,highlightChanges.call(this,defaults.MOUNT),log(a,'component did mount')},a.prototype.componentDidUpdate=function(){b.componentDidUpdate.call(this),c.update+=1,highlightChanges.call(this,defaults.UPDATE),log(a,'component did update')},a.prototype.componentWillUnmount=function(){a.showDebugCounts(),b.componentWillUnmount.call(this)},a.prototype.showDebugCounts=function(){return log(a,'component will unmount','UI Change Counts : ',c),c},log(a,'active'),a}exports.default=ReactUIDebugger;
